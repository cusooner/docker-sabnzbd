name: Docker CI
on: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: cusooner/sabnzbd
  PORT: "8080"

jobs:
  BuildImage:
    name: BuildImage
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push image to github registry
      uses: docker/build-push-action@v3
      with:
        push: true 
        platforms: linux/amd64,linux/arm64
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
        cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max

  SimpleTest:
    name: SimpleTest
    needs: BuildImage
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read

    steps:

    - name: Inspect Image
      run: |
        docker image inspect ${{ env.IMAGE_NAME }}:latest

    - name: Test image
      run: |
        docker pull ${{ env.REGISTRY }}/${{ env.IMAGE }}:latest
        docker run -d -v templates:/config --rm ${{ env.IMAGE_NAME }} |
        curl -s http://docker:$PORT/ | grep -i "sabnzbd"



    #- name: Generate Build ID
    #  id: prep
    #  run: |
        #branch=${GITHUB_REF##*/}
        #release=$(curl -s https://api.github.com/repos/sabnzbd/sabnzbd/releases/latest | awk '/tag_name/{print $4;exit}' FS='[""]')
        #echo "::set-output name=BUILD_ID::${branch}-${release}"

    # - name: Login to DockerHub
    #   uses: docker/login-action@v2
    #   with:
    #       username: ${{ secrets.DOCKER_USER }}
    #       password: ${{ secrets.DOCKER_PASSWORD }}